package gui;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;

import java.io.IOException;

import domein.ContractType;
import domein.controllers.BedrijfsBeheerController;
import domein.controllers.ContractTypeController;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.TextArea;

import javafx.scene.control.PasswordField;

import javafx.scene.control.CheckBox;
import javafx.scene.control.ComboBox;
import javafx.scene.input.KeyEvent;
import javafx.scene.layout.HBox;
import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class ContractTypeBeheerSchermController extends HBox{
	@FXML
	private Label lblFilters;
	@FXML
	private CheckBox chkActief;
	@FXML
	private CheckBox chkInactief;
	@FXML
	private TextField txfFilterNaam;
	@FXML
	private Button btnClearFilters;
	@FXML
	private TableView<ContractType> tblContractType;
	@FXML
	private TableColumn<ContractType,Integer> tbcContractTypeNr;
	@FXML
	private TableColumn<ContractType,String>tbcNaam;
	@FXML
	private TableColumn<ContractType,Integer> tbcLopendeContracten;
	@FXML
	private TableColumn<ContractType,String> tbcStatus;
	@FXML
	private Label lblContractTypeDetails;
	@FXML
	private Label lblNaam;
	@FXML
	private Label lblMinAfhandeltijd;
	@FXML
	private Label lblMaxAfhandeltijd;
	@FXML
	private Label lblPrijsContract;
	@FXML
	private Label lblStatus;
	@FXML
	private Label lblManier;
	@FXML
	private Label lblWanneer;
	@FXML
	private TextField txfNaam;
	@FXML
	private TextField txfMinAfhandeltijd;
	@FXML
	private TextField txfMaxAfhandeltijd;
	@FXML
	private TextField txfPrijs;
	@FXML
	private CheckBox chkActief1;
	@FXML
	private CheckBox chkEmail;
	@FXML
	private CheckBox chkTelefoon;
	@FXML
	private ComboBox<String> cboTijd;
	@FXML
	private Button btnClearFilters1;
	@FXML
	private Button btnContractTypeWijzigen;
	@FXML
	private Button btnContractTypeToevoegen;
	
	private final ContractTypeController contractTypeController;
	
public ContractTypeBeheerSchermController() {
		
		this.contractTypeController = new ContractTypeController();
		FXMLLoader loader = new FXMLLoader(getClass().getResource("ContractTypeBeheerScherm.fxml"));
		loader.setRoot(this);
	    loader.setController(this);
	    
	    try {
	        loader.load();
	    } catch (IOException ex) {
	        throw new RuntimeException(ex);
	    }
	    
	    
	}
	private void ContractTypeTabelInvullen() {
		 	tbcContractTypeNr.setCellValueFactory(cellData-> new SimpleIntegerProperty(cellData.getValue().getContractTypeId()).asObject());
		    tbcNaam.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getNaam()));
	        //tbcLopendeContracten.setCellValueFactory(cellData -> new SimpleIntegerProperty( cellData.getValue().getContracten()));
	        //tbcStatus.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().isStatus()));
		    //tblContractType.setItems(contractTypeController.);
	        tblContractType.refresh();
	}

	// Event Listener on CheckBox[#chkActieveKlanten].onAction
	@FXML
	public void toonActieve(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on CheckBox[#chkInactieveKlanten].onAction
	@FXML
	public void toonInactieve(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on CheckBox[#chkGeblokkeerdeKlanten].onAction
	@FXML
	public void toonAfgehandelde(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on TextField[#txfFilterGebruikersnaam].onKeyReleased
	@FXML
	public void filterGebruiker(KeyEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on TextField[#txfFilterVoornaam].onKeyReleased
	@FXML
	public void filterVoornaam(KeyEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on TextField[#txfFilterNaam].onKeyReleased
	@FXML
	public void filterNaam(KeyEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on TextField[#txfFilterBedrijf].onKeyReleased
	@FXML
	public void filterBedrijf(KeyEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnClearFilters].onAction
	@FXML
	public void clear(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on CheckBox[#chkGeblokkeerdeKlanten1].onAction
	@FXML
	public void toonGeannuleerde(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnClearFilters1].onAction
	@FXML
	public void clearKlantgegevens(ActionEvent event) {
		// TODO Autogenerated
	}
}
