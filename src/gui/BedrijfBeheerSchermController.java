package gui;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import domein.Adres;
import domein.Bedrijf;
import domein.Klant;
import domein.controllers.BedrijfsBeheerController;
import domein.enumerations.GEBRUIKERSTATUS;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.ListView;

import javafx.scene.control.PasswordField;

import javafx.scene.input.KeyEvent;
import javafx.scene.layout.HBox;
import resourcebundle.Taal;
import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class BedrijfBeheerSchermController extends HBox{
	@FXML private Label lblFilters;
	@FXML private TextField txfFilterBedrijfsnaam;
	@FXML private TextField txfFilterLand;
	@FXML private TextField txfFilterGemeente;
	@FXML private Button btnFiltersLeegmaken;
	@FXML private TableView<Bedrijf> tblBedrijven;
	@FXML private TableColumn<Bedrijf, Integer> tbcBedrijfsNr;
	@FXML private TableColumn<Bedrijf, String> tbcBedrijfsnaam;
	@FXML private TableColumn<Bedrijf, String> tbcLand;
	@FXML private TableColumn<Bedrijf, String> tbcGemeente;
	@FXML private Label lblBedrijfsgegevens;
	@FXML private Label lblBedrijfsNr;
	@FXML private Label lblBedrijfsnaam;
	@FXML private Label lblLand;
	@FXML private Label lblGemeente;
	@FXML private Label lblPostcode;
	@FXML private Label lblStraat;
	@FXML private Label lblTelefoonnummers;
	@FXML private ListView<String> lstTelefoonnummers;
	@FXML private TextField txfBedrijfnr;
	@FXML private TextField txfBedrijfsnaam;
	@FXML private TextField txfLand;
	@FXML private TextField txfGemeente;
	@FXML private TextField txfPostcode;
	@FXML private TextField txfStraat;
	@FXML private Label lblHuisnr;
	@FXML private TextField txfHuisnr;
	@FXML private Label lblBusnr;
	@FXML private TextField txfBusnr;
	@FXML private Button btnBedrijfsgegevensLegen;
	@FXML private Button btnBedrijfWijzigen;
	@FXML private Button btnBedrijfToevoegen;
	@FXML private Label lblKlanten;
	@FXML private TableView<Klant> tblKlanten;
	private Bedrijf geselecteerdBedrijf;
	private final BedrijfsBeheerController bedrijfsBeheerController;
public BedrijfBeheerSchermController(){
		
		this.bedrijfsBeheerController = new BedrijfsBeheerController();
		FXMLLoader loader = new FXMLLoader(getClass().getResource("BedrijfBeheerScherm.fxml"));
		loader.setRoot(this);
	    loader.setController(this);
	    
	    try {
	        loader.load();
	    } catch (IOException ex) {
	        throw new RuntimeException(ex);
	    }
	    bedrijfTabelInvullen();
	    tblBedrijven.getSelectionModel().selectedItemProperty().
        addListener((observableValue, oudBedrijf, NieuwBedrijf) -> {
        	if(NieuwBedrijf != null) {
        		geselecteerdBedrijf = NieuwBedrijf;
        		bedrijfDetailsInvullen(NieuwBedrijf);
        	}   	
        });    
	}
	// Event Listener on TextField[#txfFilterBedrijfsnaam].onKeyReleased
	@FXML
	public void filterBedrijfsnaam(KeyEvent event) {
		// TODO Autogenerated
		bedrijfTabelFilteren();
	}
	// Event Listener on TextField[#txfFilterLand].onKeyReleased
	@FXML
	public void filterLand(KeyEvent event) {
		// TODO Autogenerated
		bedrijfTabelFilteren();
	}
	// Event Listener on TextField[#txfFilterGemeente].onKeyReleased
	@FXML
	public void filterGemeente(KeyEvent event) {
		// TODO Autogenerated
		bedrijfTabelFilteren();
	}
	// Event Listener on Button[#btnFiltersLeegmaken].onAction
	@FXML
	public void clear(ActionEvent event) {
		// TODO Autogenerated
		txfFilterBedrijfsnaam.clear();
		txfFilterGemeente.clear();
		txfFilterLand.clear();
		bedrijfTabelFilteren();
	}
	// Event Listener on Button[#btnBedrijfsgegevensLegen].onAction
	@FXML
	public void clearBedrijfgegevens(ActionEvent event) {
		// TODO Autogenerated
		bedrijfDetailsLeegmaken();
		
	}
	// Event Listener on Button[#btnBedrijfWijzigen].onAction
	@FXML
	public void BedrijfWijzigen(ActionEvent event) {
		// TODO Autogenerated
		if(bedrijfDetailsControleren()) {
			updateBedrijfAttributen();
			bedrijfsBeheerController.wijzigBedrijf(geselecteerdBedrijf);
			bedrijfTabelInvullen();
	    	bedrijfDetailsLeegmaken();
	    	btnBedrijfToevoegen.setDisable(false);
	    }
	}
	private void updateBedrijfAttributen() {
		// TODO Auto-generated method stub	
		geselecteerdBedrijf.setBedrijfId(Integer.parseInt(txfBedrijfnr.getText()));
		geselecteerdBedrijf.setBedrijfsnaam(txfBedrijfsnaam.getText());
		Adres adres = new Adres(txfLand.getText(), txfGemeente.getText(), txfPostcode.getText(),txfStraat.getText(), Integer.parseInt(txfHuisnr.getText()), txfBusnr.getText());
		geselecteerdBedrijf.setAdres(adres);	
		List<String> telefoonnummers = lstTelefoonnummers.getItems();
		geselecteerdBedrijf.setTelefoonnummers(telefoonnummers);
		
	}
	private boolean bedrijfDetailsControleren() {
		// TODO Auto-generated method stub
		String opsommingFoutmelding = Taal.geefTekst("opsommingFoutmelding");
		String foutMelding = opsommingFoutmelding;
		if(txfBedrijfnr.getText().isBlank()) 
			foutMelding += Taal.geefTekst("verplichtBedrijfsnummer");
		if(txfBedrijfsnaam.getText().isBlank())
			foutMelding += Taal.geefTekst("verplichtBedrijfsnaam");
		if(txfLand.getText().isBlank())
			foutMelding += Taal.geefTekst("verplichtLand");
		if(txfGemeente.getText().isBlank())
			foutMelding += Taal.geefTekst("verplichtGemeente");
		if(txfPostcode.getText().isBlank())
			foutMelding += Taal.geefTekst("verplichtPostcode");
		if(txfStraat.getText().isBlank())
			foutMelding += Taal.geefTekst("verplichtStraat");
		if(txfHuisnr.getText().isBlank())
			foutMelding += Taal.geefTekst("verplichtHuisnr");
		if(foutMelding.equals(opsommingFoutmelding)) {
			return true;
		} else {
			Alert alert = new Alert (AlertType.INFORMATION);
			alert.setTitle(Taal.geefTekst("foutmeldingTitel"));
			alert.setHeaderText(Taal.geefTekst("foutmeldingHeaderBedrijf"));
			alert.setContentText(foutMelding);
			alert.showAndWait();
			return false;
		}
	}
	// Event Listener on Button[#btnBedrijfToevoegen].onAction
	@FXML
	public void voegBedrijfToe(ActionEvent event) {
		// TODO Autogenerated
		if(bedrijfDetailsControleren()) {	
			Adres adres = new Adres(txfLand.getText(), txfGemeente.getText(), txfPostcode.getText(), 
					txfStraat.getText(), Integer.parseInt(txfHuisnr.getText()), txfBusnr.getText());
			List<String> telefoonnummers = lstTelefoonnummers.getItems();
			Bedrijf bedrijf = new Bedrijf(txfBedrijfsnaam.getText(),telefoonnummers, adres);
			bedrijfsBeheerController.voegBedrijfToe(bedrijf);
			bedrijfTabelInvullen();
			bedrijfDetailsLeegmaken();
			
			}
	}
	private void bedrijfTabelFilteren() {
		String bedrijfsnaam,land,gemeente;
		bedrijfsnaam = txfFilterBedrijfsnaam.getText();
		land = txfFilterLand.getText();
		gemeente = txfFilterGemeente.getText();
		bedrijfsBeheerController.pasFilterAanBedrijf(bedrijfsnaam, land, gemeente);
	}
	private void bedrijfTabelInvullen() {
		 tbcBedrijfsNr.setCellValueFactory(cellData-> new SimpleIntegerProperty(cellData.getValue().getBedrijfId()).asObject());
		    tbcBedrijfsnaam.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getBedrijfsnaam()));
	        tbcGemeente.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getAdres().getGemeente()));
	        tbcLand.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getAdres().getLand()));
	        tblBedrijven.setItems(bedrijfsBeheerController.getAllBedrijven());
	        bedrijfTabelFilteren();
	        bedrijfDetailsLeegmaken();
	        tblBedrijven.refresh();
	}

	private void bedrijfDetailsLeegmaken() {
		// TODO Auto-generated method stub
		txfBedrijfnr.clear();
        txfBedrijfsnaam.clear();
        txfLand.clear();
        txfGemeente.clear();    
        txfPostcode.clear();
        txfStraat.clear();
        txfHuisnr.clear();
        txfBusnr.clear();
        lstTelefoonnummers.getItems().clear(); // clear items 
        lstTelefoonnummers.getSelectionModel().clearSelection(); // clear the selection 
        List<String> selectedItemsCopy = new ArrayList<>(lstTelefoonnummers.getSelectionModel().getSelectedItems()); 
        lstTelefoonnummers.getItems().removeAll(selectedItemsCopy); // removing all the selected items
        btnBedrijfToevoegen.setDisable(false);
		
	}
	private void bedrijfDetailsInvullen(Bedrijf bedrijf) {
		// TODO Auto-generated method stub
		bedrijfDetailsLeegmaken();
		txfBedrijfnr.setText(Integer.toString(bedrijf.getBedrijfId()));
        txfBedrijfsnaam.setText(bedrijf.getBedrijfsnaam());
        txfLand.setText(bedrijf.getAdres().getLand());
        txfGemeente.setText(bedrijf.getAdres().getGemeente());     
        txfPostcode.setText(bedrijf.getAdres().getPostcode());
        txfStraat.setText(bedrijf.getAdres().getStraat());
        txfHuisnr.setText(String.valueOf(bedrijf.getAdres().getHuisnummer()));
        txfBusnr.setText(bedrijf.getAdres().getBusnummer());  
     // werkt nog niet   lstTelefoonnummers.setItems((ObservableList) bedrijf.getTelefoonnummers());
        btnBedrijfToevoegen.setDisable(true);
		
	}
}
